<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.yuanmomo.searchrescue.web.mapper.LeaseInfoMapper" >
  <resultMap id="BaseResultMap" type="net.yuanmomo.searchrescue.web.bean.LeaseInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_ID" property="userId" jdbcType="BIGINT" />
    <result column="beacon_ID" property="beaconId" jdbcType="BIGINT" />
    <result column="start_Date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="return_Date" property="returnDate" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="is_Returned" property="isReturned" jdbcType="TINYINT" />
    <result column="is_Deleted" property="isDeleted" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="net.yuanmomo.searchrescue.web.bean.LeaseInfo" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_ID, beacon_ID, start_Date, return_Date, version, is_Returned, is_Deleted
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="net.yuanmomo.searchrescue.web.bean.LeaseInfoCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from leaseinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.yuanmomo.searchrescue.web.bean.LeaseInfoCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from leaseinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
      <if test="limitStartAndEnd != null" >
        limit ${limitStartAndEnd}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from leaseinfo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from leaseinfo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.yuanmomo.searchrescue.web.bean.LeaseInfoCriteria" >
    delete from leaseinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.yuanmomo.searchrescue.web.bean.LeaseInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into leaseinfo (user_ID, beacon_ID, start_Date, 
      return_Date, version, is_Returned, 
      is_Deleted, remark)
    values (#{userId,jdbcType=BIGINT}, #{beaconId,jdbcType=BIGINT}, #{startDate,jdbcType=TIMESTAMP}, 
      #{returnDate,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}, #{isReturned,jdbcType=TINYINT}, 
      #{isDeleted,jdbcType=TINYINT}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.yuanmomo.searchrescue.web.bean.LeaseInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into leaseinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_ID,
      </if>
      <if test="beaconId != null" >
        beacon_ID,
      </if>
      <if test="startDate != null" >
        start_Date,
      </if>
      <if test="returnDate != null" >
        return_Date,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="isReturned != null" >
        is_Returned,
      </if>
      <if test="isDeleted != null" >
        is_Deleted,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="beaconId != null" >
        #{beaconId,jdbcType=BIGINT},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="returnDate != null" >
        #{returnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
      <if test="isReturned != null" >
        #{isReturned,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.yuanmomo.searchrescue.web.bean.LeaseInfoCriteria" resultType="java.lang.Integer" >
    select count(*) from leaseinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update leaseinfo
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_ID = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.beaconId != null" >
        beacon_ID = #{record.beaconId,jdbcType=BIGINT},
      </if>
      <if test="record.startDate != null" >
        start_Date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.returnDate != null" >
        return_Date = #{record.returnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.isReturned != null" >
        is_Returned = #{record.isReturned,jdbcType=TINYINT},
      </if>
      <if test="record.isDeleted != null" >
        is_Deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update leaseinfo
    set id = #{record.id,jdbcType=BIGINT},
      user_ID = #{record.userId,jdbcType=BIGINT},
      beacon_ID = #{record.beaconId,jdbcType=BIGINT},
      start_Date = #{record.startDate,jdbcType=TIMESTAMP},
      return_Date = #{record.returnDate,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT},
      is_Returned = #{record.isReturned,jdbcType=TINYINT},
      is_Deleted = #{record.isDeleted,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update leaseinfo
    set id = #{record.id,jdbcType=BIGINT},
      user_ID = #{record.userId,jdbcType=BIGINT},
      beacon_ID = #{record.beaconId,jdbcType=BIGINT},
      start_Date = #{record.startDate,jdbcType=TIMESTAMP},
      return_Date = #{record.returnDate,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT},
      is_Returned = #{record.isReturned,jdbcType=TINYINT},
      is_Deleted = #{record.isDeleted,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.yuanmomo.searchrescue.web.bean.LeaseInfo" >
    update leaseinfo
    <set >
      <if test="userId != null" >
        user_ID = #{userId,jdbcType=BIGINT},
      </if>
      <if test="beaconId != null" >
        beacon_ID = #{beaconId,jdbcType=BIGINT},
      </if>
      <if test="startDate != null" >
        start_Date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="returnDate != null" >
        return_Date = #{returnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="isReturned != null" >
        is_Returned = #{isReturned,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null" >
        is_Deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.yuanmomo.searchrescue.web.bean.LeaseInfo" >
    update leaseinfo
    set user_ID = #{userId,jdbcType=BIGINT},
      beacon_ID = #{beaconId,jdbcType=BIGINT},
      start_Date = #{startDate,jdbcType=TIMESTAMP},
      return_Date = #{returnDate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      is_Returned = #{isReturned,jdbcType=TINYINT},
      is_Deleted = #{isDeleted,jdbcType=TINYINT},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.yuanmomo.searchrescue.web.bean.LeaseInfo" >
    update leaseinfo
    set user_ID = #{userId,jdbcType=BIGINT},
      beacon_ID = #{beaconId,jdbcType=BIGINT},
      start_Date = #{startDate,jdbcType=TIMESTAMP},
      return_Date = #{returnDate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      is_Returned = #{isReturned,jdbcType=TINYINT},
      is_Deleted = #{isDeleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>